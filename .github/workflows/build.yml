name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --verbose
      - name: Run clippy
        run: cargo clippy -- -D warnings
      - name: Check formatting
        run: cargo fmt -- --check

  build-cross-platform:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary-suffix: .exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary-suffix: ""
          - os: macos-latest
            target: aarch64-apple-darwin
            binary-suffix: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-suffix: ""

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev pkg-config libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Rename binary
        shell: bash
        run: |
          mkdir -p artifacts
          if [ "${{ matrix.target }}" = "x86_64-pc-windows-msvc" ]; then
            cp target/${{ matrix.target }}/release/xv.exe artifacts/xv-${{ matrix.target }}${{ matrix.binary-suffix }}
          else
            cp target/${{ matrix.target }}/release/xv artifacts/xv-${{ matrix.target }}${{ matrix.binary-suffix }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: xv-${{ matrix.target }}
          path: artifacts/xv-${{ matrix.target }}${{ matrix.binary-suffix }}
          retention-days: 7